let Router,User,RegisterValidations,Validator,randomBytes,sendMail;_61e‍.x([["default",()=>_61e‍.o]]);_61e‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_61e‍.w("../models",[["User",["User"],function(v){User=v}]]);_61e‍.w("../validators",[["RegisterValidations",["RegisterValidations"],function(v){RegisterValidations=v}]]);_61e‍.w("../middlewares/validator-middleware",[["default",["Validator"],function(v){Validator=v}]]);_61e‍.w("crypto",[["randomBytes",["randomBytes"],function(v){randomBytes=v}]]);_61e‍.w("../functions/email-sender",[["default",["sendMail"],function(v){sendMail=v}]]);





const router = Router();

/**
 * @description TO create a new account
 * @api /users/api/register
 * @access Public
 * @type POST
 */

//whatever validations failing that would be added in side our req object and from that we can get our error.
router.post(
  "/api/register",
  RegisterValidations,
  Validator,
  async (req, res) => {
    try {
      let { username, email } = req.body;
      //check if the username is already taken or not
      let user = await User.findOne({ username });
      if (user) {
        return res.status(400).json({
          success: false,
          message: "USername is already taken",
        });
      }
      //check if the user exists with that mail
      user = await User.findOne({ email });
      if (user) {
        return res.status(400).json({
          success: false,
          message: "Your email is already Registered..",
        });
      }
      user = new User({
        ...req.body,
        verificationCode: randomBytes(20).toString("hex"),
      });
      await user.save();
      //send the mail to the user with verification link
      let html = `
        <h1>Hello, ${user.username}</h1>
        <p>please click following link to verify your Account</p>
        <a href='users/verify-now/${user.verificationCode}'>Verify Now</a>`;

      sendMail(user.email, "Verify Account", "Please Verify Account", html);
      return res.status(201).json({
        success: true,
        message: "Hurray! Your Account is created, please verify your email.",
      });
    } catch (err) {
      return res.status(500).json({
        success: false,
        message: "error occured",
      });
    }
  }
);

_61e‍.d(router);
