let passport,Passport,User,Strategy,ExtractJwt,secretOrKey;_5f7‍.w("passport",[["default",["passport"],function(v){passport=v}],["Passport",["Passport"],function(v){Passport=v}]]);_5f7‍.w("../models",[["User",["User"],function(v){User=v}]]);_5f7‍.w("passport-jwt",[["Strategy",["Strategy"],function(v){Strategy=v}],["ExtractJwt",["ExtractJwt"],function(v){ExtractJwt=v}]]);_5f7‍.w("../constants",[["SECRET",["secretOrKey"],function(v){secretOrKey=v}]]);




const opts = {
  secretOrKey,
  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
};

passport.use(
  new Strategy(opts, async ({ id }, done) => {
    try {
      let user = await User.findById(id);
      if (!user) {
        throw new Error("User not found.");
      }
      return done(null, user.getUserInfo());
    } catch (err) {
      done(null, false);
    }
  })
);
