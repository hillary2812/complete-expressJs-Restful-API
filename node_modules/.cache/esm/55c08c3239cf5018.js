let cors,consola,express,mongoose,json,DB,PORT,userApis;_39c‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_39c‍.w("consola",[["default",["consola"],function(v){consola=v}]]);_39c‍.w("express",[["default",["express"],function(v){express=v}]]);_39c‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_39c‍.w("body-parser",[["json",["json"],function(v){json=v}]]);_39c‍.w("./constants",[["DB",["DB"],function(v){DB=v}],["PORT",["PORT"],function(v){PORT=v}]]);_39c‍.w("./apis/users",[["default",["userApis"],function(v){userApis=v}]]);





//Import applications constants



//Router exports


//Initialize express application
const app = express();

//Apply application middlewares
app.use(cors());
app.use(json());

//Inject Sub router and apis
app.use("/users", userApis);

const main = async () => {
  try {
    //connect with database
    await mongoose.connect(DB, {
      useNewUrlParser: true,
      useFindAndModify: true,
      useUnifiedTopology: true,
    });
    consola.success("Database Connected...");
    //Start application listening for request on server
    app.listen(PORT, () => consola.success(`server started on port ${PORT}`));
  } catch (err) {
    consola.error(`unable to start the server \n${err.message}`);
  }
};

main();
